[{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536447600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536447600,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"/tutorial/","publishdate":"2018-09-09T00:00:00+01:00","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":["blogdown"],"content":" I am referring primarily to the Blogdown book by Yihue to build this website. I am also working off Alison Premane Hills tutorial \u0026lsquo;Up and Running with blogdown. A workshop for the Portland R User Group\u0026rsquo;. [slides and link](\u0026ldquo;https://apreshill.rbind.io/talk/blogdown-meetup/\u0026quot;)\nblogdown::new_site() command to build a site\nserve_site() I need to find out when to use serve_site() instead of hugo_build() serve_site() seems to do the trick for me. When I run this command, I then can drag my public folder directly into the netlify page to manually deploy it.\nadding a logo Adding a logo. The logo file is kept in the /static/ folder save your logo image into the static folder. in the config.toml file go down to [params.logo] and change the default url to the name of your image to be used as the logo. in my case \u0026ldquo;rocco2.png\u0026rdquo;\nchoosing a theme I have considered various themes to try out by looking at some other blogs. Some of the ones that I like are Beautiful Hugo, Blackburn and also Academic but I feel that I am not academic enough to be using Academic! What I want is a simple page where I keep my learning efforts / posts and be able to find them easily. The Academic theme seems to have a section with a menu on the right that is easy to navigate. I could just remove the sections that are not relevant to me. I am going to go with the xmin theme by Yihue Xie. If its good enough for Yihue then well it should be more than good enough for a complete novice. I think it may be better to stick with a simpler theme and then work through the blogdown book by Yihue himself.\nThis is what the Yihue Xie has written in the About page for the xmin theme.\n*\u0026rdquo;XMin is the first Hugo theme I have designed. The original reason that I wrote it was I needed a minimal example of Hugo themes when I was writing the blogdown book. Basically I wanted a simple theme that supports a navigation menu, a home page, other single pages, lists of pages, blog posts, categories, tags, and RSS. That is all. Nothing fancy. In terms of CSS and JavaScript, I really want to keep them minimal. In fact, this theme does not contain any JavaScript code at all, although on this example website I did introduce some JavaScript code (still relatively simple anyway). The theme does not contain any images, either, and is pretty much a plain-text theme. The theme name \u0026ldquo;XMin\u0026rdquo; can be interpreted as \u0026ldquo;Xie\u0026rsquo;s Minimal theme\u0026rdquo; (Xie is my last name) or \u0026ldquo;eXtremely Minimal theme\u0026rdquo;.\u0026rdquo;*\nconfig.toml For this example site, I defined permalinks for two sections, post and note, so that the links to pages under these directories will contain the date info, e.g., https://xmin.yihui.name/post/2016/02/14/a-plain-markdown-post/. This is optional, and it is up to your personal taste of URLs.\n[permalinks] post = \u0026quot;/post/:year/:month/:day/:slug/\u0026quot; note = \u0026quot;/note/:year/:month/:day/:slug/\u0026quot;  You can define the menu through menu.main, e.g.,\n[[menu.main]] name = \u0026quot;Home\u0026quot; url = \u0026quot;/\u0026quot; weight = 1 [[menu.main]] name = \u0026quot;About\u0026quot; url = \u0026quot;/about/\u0026quot; weight = 2 [[menu.main]] name = \u0026quot;Categories\u0026quot; url = \u0026quot;/categories/\u0026quot; weight = 3 [[menu.main]] name = \u0026quot;Tags\u0026quot; url = \u0026quot;/tags/\u0026quot; weight = 4 [[menu.main]] name = \u0026quot;Subscribe\u0026quot; url = \u0026quot;/index.xml\u0026quot;  Alternatively, you can add menu: main to the YAML metadata of any of your pages, so that these pages will appear in the menu.\nThe page footer can be defined in .Params.footer, and the text is treated as Markdown, e.g.,\n[params] footer = \u0026quot;\u0026amp;copy; [Yihui Xie](https://yihui.name) 2017\u0026quot;  Custom layouts There are two layout files under layouts/partials/ that you may want to override: head_custom.html and foot_custom.html. This is how you inject arbitrary HTML code to the head and foot areas. For example, this site has a file layouts/partials/foot_custom.html to support LaTeX math via MathJax and center images automatically:\n\u0026lt;script src=\u0026quot;//yihui.name/js/math-code.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script async src=\u0026quot;//cdn.bootcss.com/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML\u0026quot;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;script async src=\u0026quot;//yihui.name/js/center-img.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;  You can certainly enable highlight.js for syntax highlighting by yourself through head_custom.html and foot_custom.html if you want.\nIf you do not like the default fonts (e.g., Palatino), you may provide your own static/css/fonts.css under the root directory of your website to override the fonts.css in the theme.\nOther features I could have added more features to this theme, but I decided not to, since I have no intention to make this theme feature-rich. However, I will teach you how. I have prepared several examples via pull requests at https://github.com/yihui/hugo-xmin/pulls, so that you can see the implementations of these features when you check out the diffs in the pull requests. For example, you can:\n Enable Google Analytics\n Enable Disqus comments\n Enable highlight.js for syntax highlighting of code blocks\n Display categories and tags on a page\n Add a table of contents\n Add a link in the footer of each page to \u0026ldquo;Edit this page\u0026rdquo; on Github\n  To fully understand these examples, you have to read the section on Hugo templates in the blogdown book.\nDesign philosophy Lastly, a few words about my design philosophy for this theme: I have been relying on existing frameworks like Bootstrap for years since I\u0026rsquo;m not really a designer, and I was always scared by the complexity of CSS.\nWhen I started writing this theme, I asked myself, \u0026ldquo;What if I just write from scratch?\u0026rdquo; No Bootstrap. No Normalize.css. I don\u0026rsquo;t care about IE (life could be so much easier without IE) or inconsistencies among browsers (for personal websites). As long as the theme looks okay in Chrome, Firefox, and Safari, I\u0026rsquo;m done. Thanks to the simplicity of Markdown, you cannot really produce very complicated HTML, and I think styling the HTML output from Markdown is much simpler than general HTML documents. For example, I do not need to care much about form elements like textareas or buttons.\nAfter I finished this theme, I started to wonder why I\u0026rsquo;d need normalize.css at all (it sounds like a religious belief). The default appearance of modern browsers actually looks pretty good in my eyes, after I tweak the typeface a little bit.\nCompared to inconsistencies across browsers, I care much more about these properties of HTML elements:\n Tables should always be centered, and striped tables are easier to read especially when they are wide. Tables should not have vertical borders. An image should be centered if it is the only child element of a paragraph. The max-width of images, videos, and iframes should be 100%.  I hope you can enjoy this theme. The source code is on Github. Happy hacking!\n","date":1543536000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543536000,"objectID":"8d29d4a2d1a7696565b13fccb2ecc77d","permalink":"/post/setting-up-the-blog/","publishdate":"2018-11-30T00:00:00Z","relpermalink":"/post/setting-up-the-blog/","section":"post","summary":"I am referring primarily to the Blogdown book by Yihue to build this website. I am also working off Alison Premane Hills tutorial \u0026lsquo;Up and Running with blogdown. A workshop for the Portland R User Group\u0026rsquo;. [slides and link](\u0026ldquo;https://apreshill.rbind.io/talk/blogdown-meetup/\u0026quot;)\nblogdown::new_site() command to build a site\nserve_site() I need to find out when to use serve_site() instead of hugo_build() serve_site() seems to do the trick for me. When I run this command, I then can drag my public folder directly into the netlify page to manually deploy it.","tags":[],"title":"Setting up the blog","type":"post"},{"authors":null,"categories":["learning"],"content":"I have decided to take the advice I keep coming across on twitter to start a blog and document your learning. The main reason for me is to keep track of the various courses and projects I am working on and have one central place to find everything as I spend far too much time trying to find something I have done before! I started building the blog 2 months ago but then went back to other courses and tutorials and projects which I have kept locally on my computer. But there are oh so many files now that I forget what I have done or where I have put something. Therefore from now on I am going to record everything I do on this page, including how I am building this page. This might save me a lot of time in the future. The future me in 2 months time wont have to spend time staring at a tiny screen trying to locate a file!\n","date":1543536000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543536000,"objectID":"0e46038597c1bd3e16b3ac53f6b24c12","permalink":"/post/why-am-i-doing-this/","publishdate":"2018-11-30T00:00:00Z","relpermalink":"/post/why-am-i-doing-this/","section":"post","summary":"I have decided to take the advice I keep coming across on twitter to start a blog and document your learning. The main reason for me is to keep track of the various courses and projects I am working on and have one central place to find everything as I spend far too much time trying to find something I have done before! I started building the blog 2 months ago but then went back to other courses and tutorials and projects which I have kept locally on my computer.","tags":[],"title":"Why am I doing this?","type":"post"},{"authors":null,"categories":[],"content":"At the moment I have working through the Tidy Text Mining in R book by Julia Silge and David Robinson\n Tidy Text Mining in R\nI am working through the Tidy Text Mining in R book by Julia Silge and David Robinson. Trying to replicate the examples using other texts. Trying to make sure I understand each function.\n Joining Data in Dplyr\n Dplyr Tips\n  ","date":1543449600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543449600,"objectID":"deff47017dceed0d8c4ab59a7574a0eb","permalink":"/post/what-am-i-at/","publishdate":"2018-11-29T00:00:00Z","relpermalink":"/post/what-am-i-at/","section":"post","summary":"At the moment I have working through the Tidy Text Mining in R book by Julia Silge and David Robinson\n Tidy Text Mining in R\nI am working through the Tidy Text Mining in R book by Julia Silge and David Robinson. Trying to replicate the examples using other texts. Trying to make sure I understand each function.\n Joining Data in Dplyr\n Dplyr Tips\n  ","tags":[],"title":"What am I at?","type":"post"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536447600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536447600,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"/tutorial/example/","publishdate":"2018-09-09T00:00:00+01:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":[],"categories":null,"content":"Click on the Slides button above to view the built-in slides feature.\n Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":["R"],"content":" R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/post/2015-07-23-r-rmarkdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]